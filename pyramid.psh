ps_1_4

; c0 : ambient color
; c1 : point color

; t0 : texture coords
; t2 : vector to light
; t3 : vector to eye

def     c2, 0, 1, 2, 0.5
def     c3, 0.03, -0.03, 0, 0

texcrd  r0.xyz, t0          ; r0 = u,v
texld   r1.xyzw, t0         ; r1.w = height (h)
texcrd  r2.xyz, t2          ; r2 = vector to light (L)
texcrd  r3.xyz, t3          ; r3 = vector to eye (eye)

; normalize L and eye
dp3_sat r2.w, r2, r2
mad_d2  r2, r2, 1-r2.w, r2_x2 ; L = L * (3 - L^2)/2

dp3_sat r3.w, r3, r3
mad_d2  r3, r3, 1-r3.w, r3_x2 ; eye = eye * (3 - eye^2)/2

; parallax offset
mul     r4.xy, r1.w, r3
mad     r0.xy, r4, c3, r0

phase

texld   r1.xyzw, r0         ; r1 = normal (n), r1.w = height (h)
texld   r0, r0              ; r0 = color

; --------- diffuse
dp3_sat r4.rgb, r1_bx2, r2  ; r4 = (n,L) (diffuse)

; --------- specular
dp3_x2  r5, r1_bx2, r2      ; r5 = 2(n,L) 
mad     r5.xyz, r5, r1_bx2, -r2 ; r5 = 2(n,L)*n - L
dp3_sat r5, r5, r3          ; r5 = (eye, 2(n,L)*n - L) = f
mul     r5.x, r5.x, r5.x    ; r5 = f^2
mad     r4.rgb, r5.x, r5.x, r4  ; r4 = f^4 + diffuse

; total diffuse and specular color
mad     r4.rgb, r4, c1, c0  ; r4 = CA*(ambient)+CP*(diffuse+specular)

; --------- sum up colors
mul     r0.rgb, r0, r4      ; r0 = C * (ambient + diffuse + specular)